<div class="video-call-container">
  <div class="video-call-header">
    <h1>Video Call with <%= @appointment.doctor.first_name %></h1>
    <span class="call-status">Connected</span>
  </div>
  
  <div class="video-wrapper">
    <div id="meet"></div>
  </div>
  
  <div class="call-controls">
    <button class="control-btn mute-btn" id="muteBtn">
      <span class="btn-icon">ðŸŽ¤</span>
      <span class="btn-text">Mute</span>
    </button>
    <button class="control-btn video-btn" id="videoBtn">
      <span class="btn-icon">ðŸ“¹</span>
      <span class="btn-text">Stop Video</span>
    </button>
    <button class="control-btn end-call-btn" id="endCallBtn">
      <span class="btn-icon">ðŸ“ž</span>
      <span class="btn-text">End Call</span>
    </button>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  var domain = "meet.jit.si";
  var options = {
    roomName: "<%= @room_name %>",
    width: "100%",
    height: "100%",
    parentNode: document.querySelector("#meet"),
    configOverwrite: {
      prejoinPageEnabled: false,
      startWithAudioMuted: false,
      startWithVideoMuted: false
    },
    interfaceConfigOverwrite: {
      TOOLBAR_BUTTONS: [],
      SHOW_JITSI_WATERMARK: false,
      SHOW_WATERMARK_FOR_GUESTS: false,
      DEFAULT_BACKGROUND: "#f5f5f5"
    }
  };
  
  var api = new JitsiMeetExternalAPI(domain, options);
  
  // Implement custom controls
  document.getElementById('muteBtn').addEventListener('click', function() {
    api.executeCommand('toggleAudio');
    const btnText = this.querySelector('.btn-text');
    if (btnText.textContent === 'Mute') {
      btnText.textContent = 'Unmute';
    } else {
      btnText.textContent = 'Mute';
    }
  });
  
  document.getElementById('videoBtn').addEventListener('click', function() {
    api.executeCommand('toggleVideo');
    const btnText = this.querySelector('.btn-text');
    if (btnText.textContent === 'Stop Video') {
      btnText.textContent = 'Start Video';
    } else {
      btnText.textContent = 'Stop Video';
    }
  });
  
  document.getElementById('endCallBtn').addEventListener('click', function() {
    api.executeCommand('hangup');
    window.location.href = '/appointments';
  });
});
</script>

<style>
  /* Material UI inspired styling */
  body {
    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f5f5f5;
    height: 100vh;
    overflow: hidden;
  }
  
  .video-call-container {
    display: flex;
    flex-direction: column;
    height: 100vh;
    max-height: 100vh;
  }
  
  .video-call-header {
    background-color: #1976d2;
    color: white;
    padding: 16px 24px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    z-index: 10;
  }
  
  .video-call-header h1 {
    margin: 0;
    font-size: 20px;
    font-weight: 500;
  }
  
  .call-status {
    background-color: rgba(255, 255, 255, 0.2);
    padding: 4px 12px;
    border-radius: 16px;
    font-size: 14px;
    display: flex;
    align-items: center;
  }
  
  .video-wrapper {
    flex: 1;
    background-color: #202124;
    position: relative;
    overflow: hidden;
  }
  
  #meet {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  
  .call-controls {
    display: flex;
    justify-content: center;
    padding: 16px;
    background-color: white;
    box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.1);
    gap: 16px;
  }
  
  .control-btn {
    display: flex;
    flex-direction: column;
    align-items: center;
    background: none;
    border: none;
    cursor: pointer;
    padding: 8px 16px;
    border-radius: 8px;
    transition: background-color 0.3s;
  }
  
  .control-btn:hover {
    background-color: rgba(0, 0, 0, 0.05);
  }
  
  .btn-icon {
    font-size: 20px;
    margin-bottom: 4px;
  }
  
  .btn-text {
    font-size: 12px;
    font-weight: 500;
  }
  
  .mute-btn, .video-btn {
    color: #5f6368;
  }
  
  .end-call-btn {
    color: #d93025;
  }
  
  .end-call-btn:hover {
    background-color: rgba(217, 48, 37, 0.1);
  }
  
  /* Make sure Jitsi iframe adapts properly */
  iframe {
    width: 100% !important;
    height: 100% !important;
  }
</style>